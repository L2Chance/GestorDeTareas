@model MVC.Models.PaginatedList<MVC.Models.Tarea>

@{
    ViewData["Title"] = "Mis Tareas";
}

<div class="container mt-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2>Mis Tareas</h2>
        <a asp-action="Create" class="btn btn-primary">Nueva Tarea</a>
    </div>
    
    <!-- Búsqueda -->
    <div class="row mb-4">
        <div class="col-md-6">
            <form asp-action="Index" method="get" class="d-flex gap-2">
                <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" 
                       class="form-control" placeholder="Buscar tareas..." />
                <button type="submit" class="btn btn-outline-primary">Buscar</button>
                <a asp-action="Index" class="btn btn-outline-secondary">Limpiar</a>
            </form>
        </div>
    </div>

    <!-- Tabla de tareas -->
    <div class="table-responsive">
        <table class="table table-striped">
            <thead class="table-dark">
                <tr>
                    <th>Título</th>
                    <th>Descripción</th>
                    <th>Fecha Vencimiento</th>
                    <th>Prioridad</th>
                    <th>Estado</th>
                    <th>Acciones</th>
                </tr>
            </thead>
            <tbody>
                @if (Model.Count == 0)
                {
                    <tr>
                        <td colspan="6" class="text-center text-muted py-4">
                            No hay tareas registradas.
                        </td>
                    </tr>
                }
                else
                {
                    foreach (var item in Model)
                    {
                        <tr class="@(item.Completada ? "table-success" : "")">
                            <td>
                                <div class="d-flex align-items-center">
                                    <form asp-action="ToggleComplete" method="post" class="me-2">
                                        <input type="hidden" name="id" value="@item.Id" />
                                        <button type="submit" class="btn btn-sm @(item.Completada ? "btn-success" : "btn-outline-success")">
                                            @(item.Completada ? "✓" : "○")
                                        </button>
                                    </form>
                                    <span class="@(item.Completada ? "text-decoration-line-through" : "")">
                                        @Html.DisplayFor(modelItem => item.Titulo)
                                    </span>
                                </div>
                            </td>
                            <td>
                                <span class="@(item.Completada ? "text-decoration-line-through" : "")">
                                    @Html.DisplayFor(modelItem => item.Descripcion)
                                </span>
                            </td>
                            <td>
                                <span class="@(item.Completada ? "text-decoration-line-through" : "")">
                                    @item.FechaVencimiento.ToString("dd/MM/yyyy HH:mm")
                                </span>
                            </td>
                            <td>
                                <span class="badge @(item.Prioridad switch {
                                    "Alta" => "bg-danger",
                                    "Media" => "bg-warning",
                                    "Baja" => "bg-success",
                                    _ => "bg-secondary"
                                })">
                                    @Html.DisplayFor(modelItem => item.Prioridad)
                                </span>
                            </td>
                            <td>
                                @if (item.Completada)
                                {
                                    <span class="badge bg-success">Completada</span>
                                }
                                else
                                {
                                    <span class="badge bg-warning">Pendiente</span>
                                }
                            </td>
                            <td>
                                <div class="btn-group" role="group">
                                    <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-info btn-sm">
                                        Ver
                                    </a>
                                    <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-warning btn-sm">
                                        Editar
                                    </a>
                                    <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-danger btn-sm">
                                        Eliminar
                                    </a>
                                </div>
                            </td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div>

    <!-- Paginación -->
    @if (Model.TotalPages > 1)
    {
        <nav aria-label="Navegación de páginas">
            <ul class="pagination justify-content-center">
                @if (Model.HasPreviousPage)
                {
                    <li class="page-item">
                        <a class="page-link" asp-action="Index"
                           asp-route-sortOrder="@ViewData["CurrentSort"]"
                           asp-route-pageNumber="@(Model.PageIndex - 1)"
                           asp-route-currentFilter="@ViewData["CurrentFilter"]">
                            Anterior
                        </a>
                    </li>
                }
                
                @for (int i = 1; i <= Model.TotalPages; i++)
                {
                    <li class="page-item @(i == Model.PageIndex ? "active" : "")">
                        <a class="page-link" asp-action="Index"
                           asp-route-sortOrder="@ViewData["CurrentSort"]"
                           asp-route-pageNumber="@i"
                           asp-route-currentFilter="@ViewData["CurrentFilter"]">
                            @i
                        </a>
                    </li>
                }
                
                @if (Model.HasNextPage)
                {
                    <li class="page-item">
                        <a class="page-link" asp-action="Index"
                           asp-route-sortOrder="@ViewData["CurrentSort"]"
                           asp-route-pageNumber="@(Model.PageIndex + 1)"
                           asp-route-currentFilter="@ViewData["CurrentFilter"]">
                            Siguiente
                        </a>
                    </li>
                }
            </ul>
        </nav>
    }

    <div class="text-center text-muted mt-3">
        Mostrando @((Model.PageIndex - 1) * Model.Count + 1) a @(Model.PageIndex * Model.Count) de @Model.TotalCount tareas
    </div>
</div> 